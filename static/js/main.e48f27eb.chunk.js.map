{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","titleError","setTitleError","setUserId","idError","setIdError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","push","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e48f27eb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        classNames('TodoInfo',\n          {\n            'TodoInfo--completed': completed,\n          })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\n type Props = {\n   todos: Todo[],\n };\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [idError, setIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(event.target.value);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setIdError(false);\n    setUserId(+value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const lastId = Math.max(0, ...todos.map(({ id }) => id));\n\n    const newTodo: Todo = {\n      id: lastId + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    if (title !== '' && userId !== 0) {\n      todos.push(newTodo);\n    } else if (title === '' || userId === 0) {\n      setTitleError(title === '');\n      setIdError(userId === 0);\n\n      return;\n    }\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {idError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}